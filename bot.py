import os
import time
import random
import requests
import telebot
from flask import Flask, request
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from itertools import cycle

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHAT_ID = "@Sviatoslav_Poliakov"
PROXIES = [
    "190.71.174.227:999",
    "43.201.110.79:3128",
    "43.153.119.231:13001",
    "43.153.100.212:13001"
]
proxy_pool = cycle(PROXIES)

# Telegram –±–æ—Ç
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Webhook
@app.route('/')
def set_webhook():
    bot.remove_webhook()
    bot.set_webhook(url=f"{os.getenv('RENDER_APP_URL')}/{TOKEN}")
    return 'Webhook set', 200

@app.route('/' + TOKEN, methods=['POST'])
def get_message():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return '!', 200

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥—Ä–∞–π–≤–µ—Ä–∞ –∑ –ø—Ä–æ–∫—Å—ñ

def get_driver():
    proxy = next(proxy_pool)
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--disable-gpu")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument(f"--proxy-server=http://{proxy}")
    
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=options)
    return driver, proxy

# –•–µ—à—Ç–µ–≥–∏ —Ç–∞ –º—ñ—Å—Ç–∞
HASHTAGS = [
    "#—Å–ø–∞", "#spa", "#—Å–∞—É–Ω–∞", "#–±–∞–Ω—è", "#—Ö–∞–º–∞–º", "#hamam", "#sauna", "#—Å–æ–ª—è–Ω–∞–∫—ñ–º–Ω–∞—Ç–∞", "#saltroom",
    "#wellness", "#–≤–µ–ª–Ω–µ—Å", "#–≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è", "#3d", "#—Ä–µ–Ω–¥–µ—Ä", "#render", "#visualization",
    "#projectvisualization", "#—ñ–Ω—Ç–µ—Ä—î—Ä", "#design", "#spacomplex", "#spadesign", "#saunadesign",
    "#spadesigner", "#spaproject", "#hamamdesign"
]

CITIES = ["–ö–∏—ó–≤", "–õ—å–≤—ñ–≤", "–û–¥–µ—Å–∞", "–•–∞—Ä–∫—ñ–≤", "–î–Ω—ñ–ø—Ä–æ", "–ó–∞–ø–æ—Ä—ñ–∂–∂—è"]

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É Instagram

def scrape_instagram():
    driver, proxy = get_driver()
    try:
        for hashtag in HASHTAGS:
            url = f"https://www.instagram.com/explore/tags/{hashtag.strip('#')}"  
            driver.get(url)
            time.sleep(random.randint(5, 10))
            
            posts = driver.find_elements(By.CSS_SELECTOR, "article div div div div a")
            for post in posts[:5]:
                link = post.get_attribute("href")
                bot.send_message(CHAT_ID, f"üîç –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏–π –ø–æ—Å—Ç: {link}")
                time.sleep(random.randint(2, 5))
    
    except Exception as e:
        bot.send_message(CHAT_ID, f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–∞—Ä—Å–∏–Ω–≥—É: {e}\n–°–ø—Ä–æ–±—É—é —ñ–Ω—à–∏–π –ø—Ä–æ–∫—Å—ñ: {proxy}")
    finally:
        driver.quit()

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π! –û—á—ñ–∫—É–π—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —Å–ø–∞-–ø—Ä–æ—î–∫—Ç–∏.")

# –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)))
