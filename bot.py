import os
import json
import time
import logging
import random
import telebot
from flask import Flask, request
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from webdriver_manager.chrome import ChromeDriverManager

# –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
WEBHOOK_URL = f"https://spa-radar-bot.onrender.com/{TOKEN}"
PORT = int(os.getenv("PORT", 5000))

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –§–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
USERS_FILE = "instance/users.json"

# –ü–µ—Ä–µ–ª—ñ–∫ —Ö–µ—à—Ç–µ–≥—ñ–≤ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
HASHTAGS = [
    "#—Å–ø–∞", "#spa", "#—Å–∞—É–Ω–∞", "#–±–∞–Ω—è", "#—Ö–∞–º–∞–º", "#hamam", "#sauna", "#—Å–æ–ª—è–Ω–∞–∫—ñ–º–Ω–∞—Ç–∞",
    "#saltroom", "#wellness", "#–≤–µ–ª–Ω–µ—Å", "#–≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è", "#3d", "#—Ä–µ–Ω–¥–µ—Ä", "#render",
    "#visualization", "#projectvisualization", "#—ñ–Ω—Ç–µ—Ä—î—Ä", "#design", "#spacomplex",
    "#spadesign", "#saunadesign", "#spadesigner", "#spaproject", "#hamamdesign"
]

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
if not os.path.exists("instance"):
    os.makedirs("instance")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def load_users():
    if os.path.exists(USERS_FILE):
        with open(USERS_FILE, "r") as file:
            return json.load(file)
    return []

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def save_users(users):
    with open(USERS_FILE, "w") as file:
        json.dump(users, file)

users = load_users()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Selenium
chrome_options = Options()
chrome_options.add_argument("--headless")
chrome_options.add_argument("--no-sandbox")
chrome_options.add_argument("--disable-dev-shm-usage")

service = Service("/opt/render/project/src/chromedriver")
driver = webdriver.Chrome(service=service, options=chrome_options)

# –ú–∞—Ä—à—Ä—É—Ç–∏ Flask
@app.route('/' + TOKEN, methods=['POST'])
def webhook():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return '!', 200

@app.route("/")
def set_webhook():
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    return 'Webhook set', 200

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id

    if user_id not in users:
        users.append(user_id)
        save_users(users)

    bot.send_message(user_id, "‚úÖ –í—ñ—Ç–∞—é! –¢–∏ –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ SPA, —Å–∞—É–Ω–∏ —Ç–∞ —Ä–µ–ª–∞–∫—Å-–∑–æ–Ω–∏ –≤ –£–∫—Ä–∞—ó–Ω—ñ!")

# –§—É–Ω–∫—Ü—ñ—è –ø–∞—Ä—Å–∏–Ω–≥—É –ø–æ—Å—Ç—ñ–≤ –∑ Instagram
def scrape_instagram():
    global users
    try:
        logging.info("üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Instagram...")
        driver.get("https://www.instagram.com/explore/tags/spa/")
        time.sleep(random.randint(3, 6))  # –ß–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è, —â–æ–± –∑–º–µ–Ω—à–∏—Ç–∏ —Ä–∏–∑–∏–∫ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è

        posts = driver.find_elements(By.XPATH, "//article//a")
        found_posts = []

        for post in posts[:5]:  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–µ—Ä—à—ñ 5 –ø–æ—Å—Ç—ñ–≤
            link = post.get_attribute("href")
            if any(tag in link for tag in HASHTAGS):
                found_posts.append(link)

        if found_posts:
            message = "üÜï –ù–æ–≤—ñ –ø–æ—Å—Ç–∏ –∑ Instagram:\n" + "\n".join(found_posts)
            for user_id in users:
                try:
                    bot.send_message(user_id, message)
                except Exception as e:
                    logging.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {user_id}: {e}")

    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É: {e}")

# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ—Å—Ç—ñ–≤
def check_new_posts():
    while True:
        scrape_instagram()
        time.sleep(1800)  # –ß–µ–∫–∞—Ç–∏ 30 —Ö–≤–∏–ª–∏–Ω –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=PORT)
